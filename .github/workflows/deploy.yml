name: Deployment

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: techysiddhant/hono-api
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.1

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }},${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/app
            # Create .env file securely
            echo "DATABASE_URL=${DATABASE_URL}" > .env
            echo "LOG_LEVEL=${LOG_LEVEL}" >> .env
            echo "BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}" >> .env
            echo "NODE_ENV=production" >> .env
            echo "PORT=3000" >> .env
            echo "DOMAIN_NAME=${DOMAIN_NAME}" >> .env
            echo "BETTER_AUTH_URL=${BETTER_AUTH_URL}" >> .env
            echo "APP_URL=${APP_URL}" >> .env
            echo "ORIGIN_URL=${ORIGIN_URL}" >> .env
            echo "EMAIL_VERIFICATION_CALLBACK_URL=${EMAIL_VERIFICATION_CALLBACK_URL}" >> .env
            echo "RESEND_API_KEY=${RESEND_API_KEY}" >> .env
            echo "RESEND_EMAIL=${RESEND_EMAIL}" >> .env
            echo "G_CLIENT_ID=${G_CLIENT_ID}" >> .env
            echo "G_CLIENT_SECRET=${G_CLIENT_SECRET}" >> .env
            echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env
            echo "UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}" >> .env
            echo "UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}" >> .env
            echo "UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}" >> .env
            echo "REDIS_URL=${REDIS_URL}" >> .env
            echo "QSTASH_URL=${QSTASH_URL}" >> .env
            echo "QSTASH_TOKEN=${QSTASH_TOKEN}" >> .env
            echo "QSTASH_CURRENT_SIGNING_KEY=${QSTASH_CURRENT_SIGNING_KEY}" >> .env
            echo "QSTASH_NEXT_SIGNING_KEY=${QSTASH_NEXT_SIGNING_KEY}" >> .env
            echo "AI_API_KEY=${AI_API_KEY}" >> .env
            echo "UPSTASH_VECTOR_REST_URL=${UPSTASH_VECTOR_REST_URL}" >> .env
            echo "UPSTASH_VECTOR_REST_TOKEN=${UPSTASH_VECTOR_REST_TOKEN}" >> .env
            # Set proper permissions
            chmod 600 .env
            # Pull latest image and deploy
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            docker-compose down
            docker-compose up -d
            # Clean up sensitive files
            rm -f .env
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }} 
          BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          APP_URL: ${{ secrets.APP_URL }}
          ORIGIN_URL: ${{ secrets.ORIGIN_URL }}
          EMAIL_VERIFICATION_CALLBACK_URL: ${{ secrets.EMAIL_VERIFICATION_CALLBACK_URL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_EMAIL: ${{ secrets.RESEND_EMAIL }}
          G_CLIENT_ID: ${{ secrets.G_CLIENT_ID }} 
          G_CLIENT_SECRET: ${{ secrets.G_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          UPLOADTHING_TOKEN: ${{ secrets.UPLOADTHING_TOKEN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          QSTASH_URL: ${{ secrets.QSTASH_URL }}
          QSTASH_TOKEN: ${{ secrets.QSTASH_TOKEN }}
          QSTASH_CURRENT_SIGNING_KEY: ${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
          QSTASH_NEXT_SIGNING_KEY: ${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          UPSTASH_VECTOR_REST_URL: ${{ secrets.UPSTASH_VECTOR_REST_URL }}
          UPSTASH_VECTOR_REST_TOKEN: ${{ secrets.UPSTASH_VECTOR_REST_TOKEN }}
